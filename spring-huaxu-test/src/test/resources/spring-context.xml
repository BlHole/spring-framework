<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		   http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans.xsd
">

	<bean id="myBean" name="myBean2,myBean3" class="bean.MyBean" >
		<meta key="speed" value="12ms"/>
	</bean>
	<alias name="myBean" alias="aliasMyBean"/>

	<!-- lookup test -->
	<bean id="teacher" class="bean.lookup.Teacher"/>
	<bean id="student" class="bean.lookup.Student"/>
	<bean id="lookupBean" class="bean.lookup.LookUpTestCode" >
		<!--<lookup-method name="getBean" bean="teacher"/>-->
		<lookup-method name="getBean" bean="student"/>
	</bean>
	<!-- lookup test -->

	<!-- replaced-method-test-->
	<bean id="testMethod" class="bean.replacedMenthod.ChangeMethod">
		<replaced-method name="changeMe" replacer="replaced">
			<arg-type match="java.lang.String"></arg-type>
		</replaced-method>
	</bean>
	<bean id="replaced" class="bean.replacedMenthod.ChangerMethodReplaced"/>
	<!-- replaced-method-test -->

	<!-- static factory bean -->
	<bean id="bmwCar" class="bean.factoryBean.StaticFactoryBean" factory-method="getCar">
		<constructor-arg value="3"></constructor-arg>
	</bean>
	<bean id="audiCar" class="bean.factoryBean.StaticFactoryBean" factory-method="getCar">
		<constructor-arg value="2"></constructor-arg>
	</bean>
	<!-- static factory bean -->

	<!-- instance factory bean -->
	<bean id="carFactory" class="bean.factoryBean.InstanceCarFactoryBean">
		<property name="map">
			<map>
				<entry key="4">
					<bean class="bean.factoryBean.Car">
						<property name="id" value="4"></property>
						<property name="name" value="Honda"></property>
						<property name="price" value="300000"></property>
					</bean>
				</entry>
				<entry key="6">
					<bean class="bean.factoryBean.Car">
						<property name="id" value="6"></property>
						<property name="name" value="ford"></property>
						<property name="price" value="500000"></property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="car4" factory-bean="carFactory" factory-method="getCar">
		<constructor-arg value="4"></constructor-arg>
	</bean>
	<bean id="car6" factory-bean="carFactory" factory-method="getCar">
		<constructor-arg value="6"></constructor-arg>
	</bean>
	<!-- instance factory bean -->

	<!-- 【FactoryBean<T>】 此测试需要自定义xsd -->
	<!--<bean id="testCarFactoryBean" class="bean.factoryBean.CarFactoryBean" carInfo="1,测试testCarFactoryBean,21"/>-->

	<!-- 循环依赖 -->
		<!--<bean id="beanA" class="bean.cycleCreatebean.BeanA">-->
			<!--<constructor-arg index="0" ref="beanB"/>-->
		<!--</bean>-->
		<!--<bean id="beanB" class="bean.cycleCreatebean.BeanB">-->
			<!--<constructor-arg index="0" ref="beanC"/>-->
		<!--</bean>-->
		<!--<bean id="beanC" class="bean.cycleCreatebean.BeanC">-->
			<!--<constructor-arg index="0" ref="beanA"/>-->
		<!--</bean>-->
	<!-- 循环依赖 -->

	<!-- Aware -->
	<bean id="awareBeanTest" class="bean.aware.AwareBeanTest"/>
	<bean id="testBeanFactoryAware" class="bean.aware.TestBeanFactoryAware"/>
	<!-- Aware -->

	<!-- 自定义属性编辑器 -->
		<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
			<!-- 方案一 -->
			<!--<property name="customEditors">-->
				<!--<map>-->
					<!--<entry key="java.util.Date">-->
						<!--<bean class="bean.propertyEditor.DatePropertyEditor">-->
							<!--<property name="format" value="yyyy-MM-dd"/>-->
						<!--</bean>-->
					<!--</entry>-->
				<!--</map>-->
			<!--</property>-->

			<!-- 方案二 -->
			<property name="propertyEditorRegistrars">
				<list>
					<bean class="bean.propertyEditor.DatePropertyEditorRegistry"/>
				</list>
			</property>
		</bean>

		<!-- 方案三 -->
		<bean id="conversionServiceFactoryBean" class="org.springframework.context.support.ConversionServiceFactoryBean">
			<property name="converters">
				<list>
					<bean class="bean.converter.String2DateConverter"/>
				</list>
			</property>
		</bean>
		<bean id="dateBean" class="bean.propertyEditor.DateBean">
			<property name="dateValue">
				<value>2019-11-11</value>
			</property>
		</bean>
	<!-- 自定义属性编辑器 -->

	<!-- 使用beanFactoryPostProcessor属性 -->
	<bean id="bfpp" class="bean.beanFactoryPostProcessor.MyRemovePropertBeanFactoryPostProcessor">
		<property name="properts">
			<set>
				<value>adress123456</value>
				<value>admin</value>
				<value>aobama</value>
				<value>Microsoft</value>
			</set>
		</property>
	</bean>

	<bean id="simpleBeanFactory" class="bean.beanFactoryPostProcessor.SimpleBeanFactory">
		<property name="conn" value="adress123456"/>
		<property name="pass" value="admin"/>
		<property name="name" value="huaxu"/>
	</bean>
	<!-- 使用beanFactoryPostProcessor属性 -->

	<!-- 使用beanPostProcessor -->
		<!--<bean id="myBeanPostProcessor" class="bean.beanPostProcessor.MyBeanPostProcessor"/>-->
	<!-- 使用beanPostProcessor -->

	<!-- 使用eventMuluicaster监听器 -->
	<bean class="bean.eventMulticaster.MyTestListener"/>
	<!-- 使用eventMuluicaster监听器 -->

	<!-- 使用lifecyc -->
	<bean id="myLifecycleProcessor" class="bean.lifecycleProcessor.MyLifecycleProcessor"/>
	<!-- 使用lifecyc -->
</beans>